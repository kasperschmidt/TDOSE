# The setup file appended below was run with the command: 
# import tdose; tdose.perform_extraction(setupfile='../tdose_spectra/tdose_setupfile_Rafelski-MXDF_ZAP_COR_V2_aperture_logged.txt',performcutout=False,generatesourcecat=True,modelrefimage=True,refimagemodel2cubewcs=True,definePSF=True,modeldatacube=True,createsourcecube=True,store1Dspectra=True,plot1Dspectra=True,plotS2Nspectra=True,save_init_model_output=False,clobber=True,verbose=True,verbosefull=True,logterminaloutput=False) 
# on 2021-03-05 17:20
# 
#-------------------------------------------------START OF TDOSE SETUP-------------------------------------------------
#
# Template for Three Dimensional Optimal Spectral Extracion (TDOSE, http://github.com/kasperschmidt/TDOSE) setup file
# Template was generated with tdose_utilities.generate_setup_template() on 2021-03-05 17:20
# Setup file can be run with tdose.perform_extraction() or tdose.perform_extractions_in_parallel()
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - DATA INPUT  - - - - - - - - - - - - - - - - - - - - - - - - - - -
data_cube              /location/of/parent/datacube/DATACUBE_MXDF_ZAP_COR_V2.fits                # Path and name of fits file containing data cube to extract spectra from
cube_extension         DATA                         # Name or number of fits extension containing data cube

variance_cube          /location/of/parent/datacube/DATACUBE_MXDF_ZAP_COR_V2.fits            # Path and name of fits file containing variance cube to use for extraction
variance_extension     STAT                            # Name or number of fits extension containing noise cube

ref_image              /location/of/parent/datacube/refimages/hlsp_hlf_hst_acs-60mas_goodss_f775w_v2.0_sci.fits          # Path and name of fits file containing image to use as reference when creating source model
img_extension          0                                  # Name or number of fits extension containing reference image

wht_image              /location/of/parent/datacube/refimages/hlsp_hlf_hst_acs-60mas_goodss_f775w_v2.0_wht.fits            # Path and name of fits file containing weight map of reference image (only cut out; useful for galfit modeling)
wht_extension          0                                  # Name or number of fits extension containing weight map

source_catalog         ../tdose_sourcecatalogs/tdose_sourcecat_Rafelski_in_hlsp_hlf_hst_acs-60mas_goodss_f775w_v2.0_sci.fits         # Path and name of source catalog containing sources to extract spectra for
sourcecat_IDcol        id                                 # Column containing source IDs in source_catalog
sourcecat_xposcol      x_image                            # Column containing x pixel position in source_catalog
sourcecat_yposcol      y_image                            # Column containing y pixel position in source_catalog
sourcecat_racol        ra                                 # Column containing ra  position in source_catalog (used to position cutouts if model_cutouts = True)
sourcecat_deccol       dec                                # Column containing dec position in source_catalog (used to position cutouts if model_cutouts = True)
sourcecat_fluxcol      flux_iso_f775w                          # Column containing a flux scale used for the modeling if no gauss_guess is provided
sourcecat_parentIDcol  None                               # Column containing parent source IDs grouping source IDs into objects. Set to None to used id column
                                                          # corresponding to assigning each source to a single object
                                                          # if not None the parentid is used to group source models when storing 1D spectra. All models keep sources separate.
# - - - - - - - - - - - - - - - - - - - - - - - - OUTPUT DIRECTORIES  - - - - - - - - - - - - - - - - - - - - - - - - -

models_directory       ../tdose_models/                # Directory to store the modeling output from TDOSE in
cutout_directory       ../tdose_cutouts/               # Directory to store image and cube cutouts in if model_cutouts=True
spec1D_directory       ../tdose_spectra/               # Output directory to store spectra in.

# - - - - - - - - - - - - - - - - - - - - - - - - - - CUTOUT SETUP  - - - - - - - - - - - - - - - - - - - - - - - - - -
model_cutouts          True                               # Perform modeling and spectral extraction on small cutouts of the cube and images to reduce run-time
cutout_sizes           ../tdose_sourcecatalogs/cutoutsizes_Rafelski_4xA_AREA.txt  # Size of cutouts [ra,dec] in arcsec around each source to model.
                                                          # To use source-specific cutouts provide ascii file containing ID xsize[arcsec] and ysize[arcsec].

# - - - - - - - - - - - - - - - - - - - - - - - - SOURCE MODEL SETUP  - - - - - - - - - - - - - - - - - - - - - - - - -
model_image_ext        tdose_modelimage                   # Name extension of fits file containing reference image model. To ignored use None
model_param_reg        tdose_modelimage_ds9               # Name extension of DS9 region file for reference image model. To ignored use None
model_image_cube_ext   tdose_modelimage_cubeWCS           # Name extension of fits file containing model image after conversion to cube WCS. To ignored use None.

source_model           aperture                              # The source model to use for sources. Choices are:
                                                          #   gauss          Each source is modeled as a multivariate gaussian using the source_catalog input as starting point
                                                          #   galfit         The sources in the field-of-view are defined based on GALFIT header parameters; if all components are        # Not enabled yet
                                                          #                  Gaussians an analytical convolution is performed. Otherwise numerical convolution is used.                   # Not enabled yet
                                                          #   modelimg       A model image exists, e.g., obtained with Galfit, in modelimg_directory. To disentangle/de-blend individual
                                                          #                  components, a model cube and parent_ids should be provided (see comments to modelimg_directory). If a model
                                                          #                  image is provded, TDOSE assumes it to represent the 1 object in the field-of-view.
                                                          #                  If the model image is not found a gaussian model of the FoV (source_model=gauss) is performed instead.
                                                          #   aperture       A simple aperture extraction on the datacubes is performed, i.e., no modeling of sources.

# - - - - - - - - - - - - - - - - - - - - - - - - GAUSS MODEL SETUP - - - - - - - - - - - - - - - - - - - - - - - - - -
gauss_guess            None        # To base initial guess of gaussian parameters on a SExtractor output provide SExtractor output fits file here
                                                          # If gauss_initguess=None the positions and flux scale provided in source_catalog will be used.
gauss_guess_idcol      id                                 # Column of IDs in gauss_guess SExtractor file
gauss_guess_racol      ra                                 # Column of RAs in gauss_guess SExtractor file
gauss_guess_deccol     dec                                # Column of Decs in gauss_guess SExtractor file
gauss_guess_aimg       a_area                            # Column of major axis in gauss_guess SExtractor file
gauss_guess_bimg       b_area                            # Column of minor axis in gauss_guess SExtractor file
gauss_guess_angle      theta                        # Column of angle in gauss_guess SExtractor file
gauss_guess_fluxscale  flux_iso_f775w                     # Column of flux in gauss_guess SExtractor file to us for scaling
gauss_guess_fluxfactor 10                                  # Factor to apply to flux scale in initial Gauss parameter guess
gauss_guess_Nsigma     1                                  # Number of sigmas to include in initial Gauss parameter guess

max_centroid_shift     10                                 # The maximum shift of the centroid of each source allowed in the gaussian modeling. Given in pixels to
                                                          # set bounds ypix_centroid +/- max_centroid_shift and xpix_centroid +/- max_centroid_shift
                                                          # If none, no bounds are put on the centroid position of the sources.
# - - - - - - - - - - - - - - - - - - - - - - - - GALFIT MODEL SETUP  - - - - - - - - - - - - - - - - - - - - - - - - -
galfit_directory       None               # If source_model = galfit provide path to directory containing galfit models.
                                                          # TDOSE will look for galfit_*ref_image*_output.fits (incl. the cutout string if model_cutouts=True)
                                                          # If no model is found a source_model=gauss run on the object will be performed instead.
galfit_model_extension 2                                  # Fits extension containing galfit model with model parameters of each source in header.

# - - - - - - - - - - - - - - - - - - - - - - - - MODEL IMAGE SETUP  - - - - - - - - - - - - - - - - - - - - - - - - -
modelimg_directory     None              # If source_model = modelimg provide the path to directory containing the individual source models
                                                          # TDOSE will look for model_*ref_image*.fits (incl. the cutout string if model_cutouts=True). If no model is found the object is skipped
                                                          # If a model image named model_*ref_image*_cube.fits is found, TDOSE assumes this file contains a cube with the individual model
                                                          # components isolated in individual layers of the cube. TDOSE will use this model instead of one generated within TDOSE.
                                                          # Parent IDs in the source catalog can be used to define what components belong to the object of interest (i.e., to extract a spectrum for)
                                                          # GALFIT models can be converted to TDOSE-suited model-cubes with tdose_utilities.galfit_convertmodel2cube()
                                                          # A TDOSE-suited model-cube can be build from individual 2D models with tdose_utilities.build_modelcube_from_modelimages()
modelimg_extension     0                                  # Fits extension containing model

# - - - - - - - - - - - - - - - - - - - - - - - - APERTURE MODEL SETUP  - - - - - - - - - - - - - - - - - - - - - - - -
aperture_size          ../tdose_sourcecatalogs/apertureradii_Rafelski_1xA_AREA.txt                                # Radius of apertures (float or list) to use given in arc seconds. For longer list of
                                                          # object-specific apertures provide ascii file containing ID and aperturesize[arcsec].

# - - - - - - - - - - - - - - - - - - - - - - - - - PSF MODEL SETUP - - - - - - - - - - - - - - - - - - - - - - - - - -
psf_type               gauss                              # Select PSF model to build. Choices are:
                                                          #   gauss      Model the PSF as a symmetric Gaussian with sigma = FWHM/2.35482
                                                          #   kernel_gauss   An astropy.convolution.Gaussian2DKernel() used for numerical convolution                        # Not enabled yet
                                                          #   kernel_moffat  An astropy.convolution.Moffat2DKernel()   used for numerical convolution                        # Not enabled yet
psf_FWHM_evolve        linear                             # Evolution of the FWHM from blue to red end of data cube. Choices are:
                                                          #   linear     FWHM wavelength dependence described as FWHM(lambda) = p0[''] + p1[''/A] * (lambda - p2[A])
psf_FWHMp0             0.6                              # p0 parameter to use when determining wavelength dependence of PSF
psf_FWHMp1             -5e-05                          # p1 parameter to use when determining wavelength dependence of PSF
psf_FWHMp2             7000.0                               # p2 parameter to use when determining wavelength dependence of PSF
psf_savecube           True                               # To save fits file containing the PSF cube set psf_savecube = True
                                                          # This cube is used for the "source_model = modelimg" numerical PSF convolution

# - - - - - - - - - - - - - - - - - - - - - - - - - - - NON_DETECTIONS  - - - - - - - - - - - - - - - - - - - - - - - -
nondetections          None                               # List of IDs of sources in source_catalog that are not detected in the reference image or which
                                                          # have low flux levels in which cases the Gaussian modeling is likely to be inaccurate.
                                                          # For long list of objects provide ascii file containing ids.
                                                          #     If source_model = gauss    then sources will be extracted by replacing models within ignore_radius
                                                          #                                with a single point source in the reference image model, which will then
                                                          #                                be convolved with the PSF specified when extracting, as usual.
                                                          #     If source_model = modelimg TDOSE assumes that the input model already represents the desired extraction model
                                                          #                                of the non-detection. I.e., if the object should be extracted as a (PSF
                                                          #                                convolved) point source, the model image should include a point source.
                                                          #                                Hence, for source_model = modelimg the keyword nondetections is ignored.
ignore_radius          0.5                                # Models within a radius of ignore_radius [arcsec] of the non-detection location will be replaced with a
                                                          # point source for extractions with source_model = gauss before convolving with the PSF and adjusting the flux
                                                          # leves in each model cube layer.

# - - - - - - - - - - - - - - - - - - - - - - - - - CUBE MODEL SETUP  - - - - - - - - - - - - - - - - - - - - - - - - -
model_cube_layers      all                                # Layers of data cube to model [both end layers included]. If 'all' the full cube will be modeled.
                                                          # To model source-specific layers provide ascii file containing ID layerlow and layerhigh.
                                                          # If layerlow=all and layerhigh=all all layers will be modeled for particular source
model_cube_optimizer   matrix                             # The optimizer to use when matching flux levels in cube layers:
                                                          #   matrix      Optimize fluxes analytically using matrix algebra to minimize chi squared of
                                                          #               the equation set comparing model and data in each layer.
                                                          #   nnls        Optimize fluxes using Scipy's non-negative least squares solver restricting
                                                          #               flux scales to >= 0 (assuming source models are non-negative too).
                                                          #   curvefit    Optimize fluxes numerically using least square fitting from scipy.optimize.curve_fit().
                                                          #               Only enabled for analytic convolution of Gaussian source models.
                                                          #   lstsq       Optimize fluxes analytically using scipy.linalg.lstsq().

model_cube_ext         tdose_modelcube                    # Name extension of fits file containing model data cube.
residual_cube_ext      tdose_modelcube_residual           # Name extension of fits file containing residual between model data cube and data. To ignored use None.
source_model_cube_ext  tdose_source_modelcube             # Name extension of fits file containing source model cube (used to modify data cube).

# - - - - - - - - - - - - - - - - - - - - - - - - SPECTRAL EXTRACTION - - - - - - - - - - - - - - - - - - - - - - - - -
sources_to_extract     [5082,6729]            # Sources in source_catalog to extract 1D spectra for.
                                                          # If sourcecat_parentIDcol is not None all associated spectra are included in stored object spectra
                                                          # If set to 'all', 1D spectra for all sources in source_catalog is produced (without grouping according to parents).
                                                          # For long list of objects provide ascii file containing containing ids (here parent grouping will be performed)
spec1D_name            tdose_spectrum_mxdf                     # Name extension to use for extracted 1D spectra

# - - - - - - - - - - - - - - - - - - - - - - - - - - - PLOTTING  - - - - - - - - - - - - - - - - - - - - - - - - - - -
plot_generate          True                               # Indicate whether to generate plots or not
plot_1Dspec_ext        fluxplot                           # Name extension of pdf file containing plot of 1D spectrum
plot_1Dspec_xrange     [4600,9400]                        # Range of x-axes (wavelength) for plot of 1D spectra
plot_1Dspec_yrange     [-100,1300]                        # Range of y-axes (flux) for plot of 1D spectra
plot_1Dspec_shownoise  True                               # Indicate whether to show the noise envelope in plot or not

plot_S2Nspec_ext       S2Nplot                            # Name extension of pdf file containing plot of S/N spectrum
plot_S2Nspec_xrange    [4600,9400]                        # Range of x-axes (wavelength) for plot of S2N spectra
plot_S2Nspec_yrange    [-5,60]                            # Range of y-axes (S2N) for plot of S2N spectra
#--------------------------------------------------END OF TDOSE SETUP--------------------------------------------------

